{
  "name": "Heal Selected",
  "type": "script",
  "scope": "global",
  "command": "/**\n * Heal Selected Macro\n * Heal selected tokens by a specified amount\n */\n\nconst tokens = canvas.tokens.controlled;\n\nif (tokens.length === 0) {\n  ui.notifications.warn('Please select at least one token to heal.');\n  return;\n}\n\n// Prompt for heal amount\nconst healAmount = await new Promise((resolve) => {\n  new Dialog({\n    title: 'Heal Amount',\n    content: `\n      <div style=\"padding: 10px;\">\n        <p>Enter the amount of health to restore:</p>\n        <input type=\"number\" id=\"heal-amount\" min=\"1\" max=\"100\" value=\"10\" style=\"width: 100%; margin: 10px 0;\">\n      </div>\n    `,\n    buttons: {\n      heal: {\n        label: 'Heal',\n        callback: (html) => {\n          const amount = parseInt(html.find('#heal-amount').val()) || 10;\n          resolve(amount);\n        }\n      },\n      cancel: {\n        label: 'Cancel',\n        callback: () => resolve(null)\n      }\n    },\n    default: 'heal'\n  }).render(true);\n});\n\nif (healAmount === null) return;\n\nconsole.log(`❤️ Healing ${tokens.length} token(s) for ${healAmount} points...`);\n\nfor (const token of tokens) {\n  if (token.actor) {\n    try {\n      const currentHP = token.actor.system.health?.value || 0;\n      const maxHP = token.actor.system.health?.max || 100;\n      const newHP = Math.min(currentHP + healAmount, maxHP);\n      \n      await token.actor.update({\n        'system.health.value': newHP\n      });\n      \n      console.log(`✅ Healed ${token.actor.name}: ${currentHP} → ${newHP}`);\n      \n      // Visual feedback\n      canvas.interface.createScrollingText(token.center, `+${healAmount}`, {\n        anchor: CONST.TEXT_ANCHOR_POINTS.CENTER,\n        direction: CONST.TEXT_ANCHOR_POINTS.TOP,\n        distance: 2 * token.h,\n        fontSize: 32,\n        fill: '#00FF00',\n        stroke: '#000000',\n        strokeThickness: 4,\n        jitter: 0.25\n      });\n      \n    } catch (error) {\n      console.error(`❌ Failed to heal ${token.actor.name}:`, error);\n    }\n  }\n}\n\nui.notifications.info(`Healed ${tokens.length} token(s) for ${healAmount} HP!`);",
  "img": "icons/svg/heal.svg",
  "folder": "I2DxQGZe1f2TAtJc",
  "sort": 400,
  "flags": {
    "avant": {
      "description": "Heal selected tokens by a specified amount",
      "version": "1.0.0",
      "category": "healing"
    }
  },
  "_id": "FJLNL2nRC64suxnB",
  "category": "utility"
}